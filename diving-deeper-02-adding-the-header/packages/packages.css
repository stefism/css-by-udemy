main {
  margin-top: 4rem;
}

.background {
  /* background: url("../images/plans-background.jpg"); */
  background: url("../images/plans-background.jpg") center/cover;
  /* Можем да задаваме филтри като яркост, контраст и други. Мега яко. */
  filter: grayscale(100%);
  filter: grayscale(40%);
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0px;
  left: 0px;
  z-index: -1; /* z-index може да се прилага само за елементи, на които пропертито position е различно от дефолтното, което е static. fixed и absolute position изваждат елементите от флоула на страницата. fixed се позиционира спрямо видимата част на страницата. position се позиционира в зависимост. (виж коментара по-долу на position: absolute;) */
}

.section-title {
  position: relative; /* position: relative не изважда елемента от флоула на страницата. В случая го ползваме за да може спрямо него, да позиционираме .badge елемента. Също така, когато дадем на елемент position: relative, той може да се мести спрямо него си самия с указването на top, bottom, left, right пропертитата, без да е необходимо над него да има друг елемент с приложена позиция. Ако е дете на друг еелемент, той може да излезне извън парент елемента и да се вижда, че е излазъл извън него. За да не се вижда, че е излазъл извън парент елемента си, на парент елемента му, трябва да дадем проперти overflow: hidden. Ако приложим overflow: hidden на body тага, няма да има ефект. Трябва да приложим overflow: hidden и на html тага за да проработи overflow: hidden и на body тага. */
  background: #e0f3c3;
  width: 800px;
  border: 5px solid green;
  border-left: none;
  padding: 50px;
  margin: 10px 0px;
}

.badge {
  position: absolute;
  /* position: absolute - ако няма обграждащи го над него елементи, като например ако не е сложен в div таг, елемента се позиционира спрямо html тага. Ако е вложен в друг таг елемент на който има приложено проперти position, което е различно от дефолтното, той се позиционира спрямо него. */
  font-size: 12px;
  color: white;
  background: red;
  top: 0px;
  right: 0px;
  margin: 20px;
  padding: 8px;
}

.section-title:hover {
  border: 5px solid red;
  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.5);
}

.free {
  background: #60e060;
  border: 5px solid green;
  border-right: none;
  text-align: right;
  float: right; /* Използва се за позициониране на елементи на място различно от цялостния документ флоу. Подходящо е за картинка, която останалите елементи от страницата обграждат. Овъррайдваме текущата позиция и казваме на браузъра да позиционира елемента от ляво или от дясно на страницата.
  В нашия случай не искаме останалите елементи от страницата да обграждат кутията на free плана, която искаме да позиционираме от дясно. За да стане това, правим div елемент, след елемента, който сме флотнали и му казваме clear: both; */
}

.clearfix {
  clear: both; /* Това означава, всички елементи след този, да не се съобразяват с предишния float. Така го хакваме за да не ображда долния елемент (премиум плана) - горния. (безплатния план) */
}

a {
  text-decoration: none;
}

.section-title__h1 {
  color: #464747;
}

.section-title__h2 {
  color: darkgrey;
}

.section-title__p {
  background: white;
  padding: 20px;
  border: 2px solid green;
  color: green;
  font-size: 20px;
}

.premium {
  background: #029602;
}

.premium .section-title__h1 {
  color: white;
}
